/*
 * Copyright (c) 2021 @MangoIV
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

// makes it possible to hold backspace

&lt {
    quick_tap_ms = <150>;
    quick-tap-ms = <150>;
};

/ {
    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <1 2>;
        };

        tilde {
            bindings = <&kp TILDE>;
            key-positions = <0 1 2>;
        };

        grave {
            bindings = <&kp GRAVE>;
            key-positions = <0 1>;
        };

        locklayer {
            bindings = <&tog 5>;
            key-positions = <0 1 2 3>;
        };

        bspc {
            bindings = <&kp BSPC>;
            key-positions = <16 17>;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow_mods";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <300>;
            quick-tap-ms = <250>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            label = "Qwerty";
            bindings = <
&kp Q             &kp W           &kp E         &kp R           &kp T         &kp Y       &kp U            &kp I        &kp O            &kp P
&hm LEFT_SHIFT A  &hm LEFT_GUI S  &hm LCTRL D   &hm LEFT_ALT F  &lt 4 G       &kp H       &hm RIGHT_ALT J  &hm RCTRL K  &hm RIGHT_GUI L  &hm RIGHT_SHIFT LG(LS(SPACE))
&kp Z             &kp X           &kp C         &kp V           &lt 2 B       &kp N       &kp M            &kp RS(TAB)  &kp TAB          &kp CAPS
                                  &kp CAPSLOCK                  &kp LEFT_GUI  &kp C_MUTE  &lt 1 SPACE                   &lt 3 ENTER
            >;

            sensor-bindings = <&inc_dec_kp DOWN LS(UP)>;
        };

        layer_1 {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5         &kp NUMBER_6  &kp N7          &kp N8        &kp N9         &kp N0
&kp MINUS     &kp EQUAL     &kp LBKT      &kp RBKT      &kp BACKSLASH  &kp COMMA     &kp LEFT_ARROW  &kp UP_ARROW  &kp RIGHT      &kp DOT
&trans        &kp FSLH      &kp SEMI      &kp SQT       &trans         &trans        &kp LG(LEFT)    &kp DOWN      &kp LG(RIGHT)  &trans
                            &trans                      &trans         &trans        &trans                        &trans
            >;
        };

        layer_2 {
            bindings = <
&kp F1   &kp F2   &kp F3  &kp F4  &kp F5   &trans  &trans  &trans  &trans  &trans
&kp F6   &kp F7   &kp F8  &kp F9  &kp F10  &trans  &trans  &trans  &trans  &trans
&kp F11  &kp F12  &trans  &trans  &trans   &trans  &trans  &trans  &trans  &trans
                  &trans          &trans   &trans  &trans          &trans
            >;
        };

        layer_3 {
            bindings = <
&kp EXCL   &kp AT     &kp HASH   &kp DLLR  &kp PRCNT  &kp CARET  &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR
&kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE   &kp LT     &trans    &trans    &trans    &kp GT
&trans     &kp QMARK  &kp COLON  &kp DQT   &trans     &trans     &trans    &trans    &trans    &trans
                      &trans               &trans     &trans     &trans              &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &kp C_BRI_DN  &kp C_BRI_UP  &trans        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &kp C_VOL_DN  &kp C_VOL_UP  &trans        &bt BT_CLR    &trans        &trans        &trans        &trans
&trans  &trans  &trans        &trans        &out OUT_TOG  &trans        &trans        &trans        &sys_reset    &bootloader
                &trans                      &trans        &trans        &trans                      &trans
            >;
        };

        layer_5 {
            bindings = <
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none
              &none         &none  &none  &none         &none
            >;
        };
    };
};
